service:
  name: kaskadi-stock-report-lambda

package:
  individually: true
  exclude:
    - "**/**"

provider:
  name: aws
  runtime: nodejs12.x
  stackName: ${self:service.name}-stack
  stage: ${opt:stage, 'prod'}
  region: eu-central-1
  deploymentBucket:
    name: kaskadi-serverless-deployment-bucket
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: !Ref KaskadiStockReporter

functions:
  KaskadiStockReport:
    handler: kaskadi-stock-report-lambda.handler
    name: ${self:service.name}
    layers:
      - !ImportValue KaskadiEsLayerArn
    package:
      include:
        - 'kaskadi-stock-report-lambda.js'
        - 'helpers/**'
        - 'node_modules/**'
    environment:
      TOPIC_ARN: !Ref KaskadiStockReporter
      ES_ID: ${env:ES_ID}
      ES_SECRET: ${env:ES_SECRET}
      ES_ENDPOINT: ${env:ES_ENDPOINT}
    events:
      - schedule:
          rate: cron(0 7 ? * MON *) # runs every monday at 7AM
          enabled: true

resources:
  Resources:
    KaskadiStockReporter:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: KaskadiStockReporter
        DisplayName: Klimapartner's stock autoreporter
        Subscription:
          - Endpoint: "a.lemaire@klimapartner.de"
            Protocol: email
          - Endpoint: "j.will@klimapartner.de"
            Protocol: email
